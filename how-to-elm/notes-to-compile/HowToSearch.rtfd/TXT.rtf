{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Monaco;
\f3\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red22\green21\blue22;\red255\green255\blue255;\red78\green77\blue78;
\red18\green79\blue146;\red22\green21\blue22;\red115\green115\blue115;\red22\green21\blue22;\red29\green136\blue198;
\red246\green246\blue246;}
{\*\expandedcolortbl;;\cssrgb\c11373\c10980\c11373;\cssrgb\c100000\c100000\c100000;\cssrgb\c38039\c37647\c38039;
\cssrgb\c7059\c39216\c63922;\cssrgb\c11373\c10980\c11373\c3922;\cssrgb\c52549\c52549\c52549;\cssrgb\c11373\c10980\c11373\c70196;\cssrgb\c11373\c60784\c81961\c10196;
\cssrgb\c97255\c97255\c97255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid101\'00;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}}{\leveltext\leveltemplateid102\'00;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid401\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid501\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\cb3 Rob\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf2 \cb3 \'a0\'a0{\field{\*\fldinst{HYPERLINK "https://elmlang.slack.com/archives/C0K8VHA6B/p1732116033379339"}}{\fldrslt 
\fs24 \cf4 \strokec4 Wednesday at 3:20 PM}}\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 How do you deal with complex search?\cb1 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Data structures (tags, categories, filters)\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Store filters\'a0{\field{\*\fldinst{HYPERLINK "https://github.com/badlydrawnrob/badlydrawnrob.github.io/blob/a18c27407592c3238d20d1ef840a48ae7abd00d2/testing/profile/src/Main.elm#L200"}}{\fldrslt \cf5 \strokec5 in the model}}, or use\'a0
\f2\fs24 \cb6 Url
\f1\fs30 \cb3 \'a0parameters?\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf5 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}{\field{\*\fldinst{HYPERLINK "https://github.com/badlydrawnrob/badlydrawnrob.github.io/blob/a18c27407592c3238d20d1ef840a48ae7abd00d2/testing/profile/src/Main.elm#L167"}}{\fldrslt \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Visibility\'a0}}
\f2\fs24 \cf2 \cb6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Bool
\f1\fs30 \cb3 \'a0or a\'a0
\f2\fs24 \cb6 model.filteredMeals
\f1\fs30 \cb3 \'a0(store filtered records)?\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 How do you chain filters? Use a bunch of\'a0
\f2\fs24 \cb6 &&
\f1\fs30 \cb3 \'a0functions? Something more clever?\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Any \'93The Elm Way\'94 strong preferences?\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 I currently have\'a0{\field{\*\fldinst{HYPERLINK "https://robmcdonald.me/testing/profile/"}}{\fldrslt \cf5 \strokec5 a\'a0}}
\f2\fs24 \cb6 List.member{\field{\*\fldinst{HYPERLINK "https://robmcdonald.me/testing/profile/"}}{\fldrslt 
\f1\fs30 \cf5 \cb3 \strokec5 \'a0search}}
\f1\fs30 \cb3 \'a0with a very rudimentary\'a0
\f2\fs24 \cb6 List Ingredients
\f1\fs30 \cb3 \'a0strings (eventually may need a many-to-many master list later), some simple\'a0{\field{\*\fldinst{HYPERLINK "https://github.com/badlydrawnrob/badlydrawnrob.github.io/blob/a18c27407592c3238d20d1ef840a48ae7abd00d2/testing/profile/src/Main.elm#L74"}}{\fldrslt \cf5 \strokec5 sum types}}\'a0(categories), and (eventually) simple filters such as\'a0
\f2\fs24 \cb6 price
\f1\fs30 \cb3 . I\'92m currently\'a0
\f3\i changing
\f1\i0 \'a0the\'a0
\f2\fs24 \cb6 Meal
\f1\fs30 \cb3 \'a0type with a\'a0
\f2\fs24 \cb6 Bool
\f1\fs30 \cb3 \'a0for visibility. I expect on a larger scale this isn\'92t advisable.\cb1 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f0\b \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I don\'92t want to use\'a0
\f2\b0\fs24 \cb6 Browser.Application
\f0\b\fs30 \cb3 \'a0yet,
\f1\b0 \'a0I find it a bit complicated\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I\'92m guessing using\'a0
\f2\fs24 \cb6 Url
\f1\fs30 \cb3 \'a0and grabbing the parameters is better?\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Currently\'a0
\f2\fs24 \cb6 model.form
\f1\fs30 \cb3 \'a0resets every time as it\'92s a\'a0
\f2\fs24 \cb6 POST
\f1\fs30 \cb3 \'a0form (page refresh)\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Is\'a0
\f2\fs24 \cb6 method="get"
\f1\fs30 \cb3 \'a0form preferrable? (it doesn\'92t refresh the page)\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls2\ilvl1
\f0\b \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 		\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 However it doesn\'92t add\'a0
\f2\b0\fs24 \cb6 Url
\f0\b\fs30 \cb3 \'a0parameters with this method!
\f1\b0 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 I might migrate this question to Discourse, but am keen to get some early ideas.
\fs26 \cf7 \strokec7 \'a0(edited)\'a0
\fs30 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0

\fs26 \cf8 \cb3 \strokec8 5 replies\cb1 \
\pard\pardeftab720\partightenfactor0

\fs30 \cf2 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \
\cb3 Martin Stewart\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf2 \cb3 \'a0\'a0{\field{\*\fldinst{HYPERLINK "https://elmlang.slack.com/archives/C0K8VHA6B/p1732121389375269?thread_ts=1732116033.379339&cid=C0K8VHA6B"}}{\fldrslt 
\fs24 \cf4 \strokec4 Wednesday at 4:49 PM}}\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Just simple Lists of data if there isn't so much data that there's\'a0 performance issues\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 If I expect the user will want to show someone else what they are looking at, then I include enough data in the url to make that possible. Otherwise I don't bother.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I'm not sure exactly what you mean. But if you're asking if the filter state should be combined with the data itself, no I don't think that's a good idea.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Just a bunch of && or whatever simple code is needed. I avoid building any abstractions around the filtering\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	5	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Do the most simple thing possible until it's very clear that something more complicated is needed\cb1 \
\pard\pardeftab720\partightenfactor0

\fs24 \cf2 {{\NeXTGraphic 261d-fe0f@2x.png \width640 \height640 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\pardeftab720\partightenfactor0
\cf2 \
\cb3 1\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 {{\NeXTGraphic 1f44d@2x.png \width640 \height640 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\pardeftab720\partightenfactor0
\cf2 \
\cb3 2\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs36 \cf2 \
\pard\pardeftab720\partightenfactor0

\f0\b\fs30 \cf2 \
\cb3 Rob\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf2 \cb3 \'a0\'a0{\field{\*\fldinst{HYPERLINK "https://elmlang.slack.com/archives/C0K8VHA6B/p1732199631332499?thread_ts=1732116033.379339&cid=C0K8VHA6B"}}{\fldrslt 
\fs24 \cf4 \strokec4 Thursday at 2:33 PM}}\cb1 \
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://elmlang.slack.com/team/U9RGY8ZAP"}}{\fldrslt \cf2 \cb9 @Martin Stewart}}\cb9 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \'a0Ok cool, let me clarify:\cb1 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The master list of recipes might get very long (a big json file) otherwise lists will be fine for now.\'a0
\f2\fs24 \cb6 Set
\f1\fs30 \cb3 \'a0could be useful when users post a recipe/meal for ingredients lists.\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ah that\'92s a very good point. Some things will be behind a paywall, so perhaps don\'92t need to worry about url for now.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0
\f2\fs24 \cf2 \cb6 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 [\{title = "Beef noodles", visible = True\}]
\f1\fs30 \cb3 \'a0{\field{\*\fldinst{HYPERLINK "https://github.com/badlydrawnrob/badlydrawnrob.github.io/blob/a18c27407592c3238d20d1ef840a48ae7abd00d2/testing/profile/src/Main.elm#L392"}}{\fldrslt \cf5 \strokec5 becomes\'a0}}
\f2\fs24 \cb6 visible = False{\field{\*\fldinst{HYPERLINK "https://github.com/badlydrawnrob/badlydrawnrob.github.io/blob/a18c27407592c3238d20d1ef840a48ae7abd00d2/testing/profile/src/Main.elm#L392"}}{\fldrslt 
\f1\fs30 \cf5 \cb3 \strokec5 \'a0in\'a0}}model.list
\f1\fs30 \cb3 \'a0currently, which can be\'a0
\f2\fs24 \cb6 Reset
\f1\fs30 \cb3 . What you seem to be saying is to not do that. Would you instead store a\'a0
\f2\fs24 \cb6 model.filteredList
\f1\fs30 \cb3 \'a0of records on form submit from the\'a0
\f2\fs24 \cb6 List Meal
\f1\fs30 \cb3 \'a0 in\'a0
\f2\fs24 \cb6 model.list
\f1\fs30 \cb3 ?\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 The other two points I\'92d agree with. I prefer simplicity, but I\'92m sure there\'92s more (better?) complex methods out there at scale.\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \
\cb3 Martin Stewart\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf2 \cb3 \'a0\'a0{\field{\*\fldinst{HYPERLINK "https://elmlang.slack.com/archives/C0K8VHA6B/p1732228652870649?thread_ts=1732116033.379339&cid=C0K8VHA6B"}}{\fldrslt 
\fs24 \cf4 \strokec4 Thursday at 10:37 PM}}\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 For the cases where performance matters, it's hard to give advice. It depends a lot on the details. Maybe you need some specialized data structure, or maybe you can use Html.Lazy, or cache the filtered list in your model to avoid recomputes, or maybe filtering the data itself isn't slow but the number of DOM element is what's slow and you need to virtualize your UI\cb1 \
\
\cb3 For 3, I would not store filteredList unless I didn't have other options. My preference would be to compute it as necessary. If computing it as necessary is too slow, then I'd first see if I can get away with using Html.Lazy. And failing that, then I'd store filteredList in the model.
\fs26 \cf7 \strokec7 \'a0(edited)\'a0
\fs30 \cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \
\cb3 Rob\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf2 \cb3 \'a0\'a0{\field{\*\fldinst{HYPERLINK "https://elmlang.slack.com/archives/C0K8VHA6B/p1732277360200179?thread_ts=1732116033.379339&cid=C0K8VHA6B"}}{\fldrslt 
\fs24 \cf4 \strokec4 Yesterday at 12:09 PM}}\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 Hmm. It seems best to start simple and wait until that json file grows. Worry about performance in a bit.\cb1 \
\
\cb3 Ok two follow up questions:\cb1 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What information would a person/Ai need to be able to advise on performance? What tools can test bottlenecks?\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I\'92m struggling to see how you could compute it any other way than\'a0
\f2\fs24 \cb6 update
\f1\fs30 \cb3 \'a0taking (to simply the question) a big\'a0
\f2\fs24 \cb6 List String
\f1\fs30 \cb3 \'a0in\'a0
\f2\fs24 \cb6 model.data
\f1\fs30 \cb3 \'a0and storing/updating that list somehow. How does\'a0
\f2\fs24 \cb6 view
\f1\fs30 \cb3 \'a0know what to do without a model to pull in from?**\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 **Do you mean to just use\'a0
\f2\fs24 \cb6 List.map
\f1\fs30 \cb3 \'a0or whatever filtering functions within the view itself? I assumed that would be\'a0
\f2\fs24 \cb6 update
\f1\fs30 \cb3 s job, using a\'a0
\f2\fs24 \cb6 Msg
\f1\fs30 \cb3 \'a0on post/get?\cb1 \
\
\cb3 I guess you could store the\'a0
\f2\fs24 \cb6 searchFilter
\f1\fs30 \cb3 \'a0options in the model and use those to filter in the\'a0
\f2\fs24 \cb6 view
\f1\fs30 \cb3 ?\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb10 Martin Stewart\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf2 \cb10 \'a0\'a0{\field{\*\fldinst{HYPERLINK "https://elmlang.slack.com/archives/C0K8VHA6B/p1732290780725839?thread_ts=1732116033.379339&cid=C0K8VHA6B"}}{\fldrslt 
\fs24 \cf4 \strokec4 Yesterday at 3:53 PM}}\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf2 \cb10 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I find Firefox's performance profiler is good. It has a flamegraph mode which does a good job of indicating what generated JS functions are slow (the profiler also can show if it's layout that's slow)\cb1 \
\ls6\ilvl0\cb10 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Something like this for example\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf2 \cb6 type alias Model = \{ items : List Item, filterConfig : FilterConfig \}\
\
view model = Html.Lazy.lazy2 bigListView model.items model.filterConfig\
\
bigListView items filterConfig = \
    List.filterMap\
        (\\item -> \
            if shouldShowItem item filterConfig then\
                 itemView item |> Just\
            else \
                Nothing\
        )\
        items \
        |> Html.div []\cb1 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf7 \cb10 \strokec7 (edited)
\fs30 \cf2 \cb1 \strokec2 \
}